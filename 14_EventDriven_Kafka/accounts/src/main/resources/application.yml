server:
  port: 8080

spring:
  application:
    name: accounts
  profiles:
    active: "${SPRING_PROFILES_ACTIVE:qa}"
  config:
    import: "${SPRING_CLOUD_CONFIG_URI:optional:configserver:http://localhost:8071/}"
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest


  #  devtools:
  #    restart:
  #      trigger-file: .reloadtrigger
  datasource:
    url: "${POSTGRES_URI:jdbc:postgresql://localhost:5432/eazybank}"
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: postgres
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
    function:
      definition: updateAccountCommunicationStatus
    stream:
      bindings:
        updateAccountCommunicationStatus-in-0:
          destination: communication-sent
          group: ${spring.application.name}
        sendCommunication-out-0:
          destination: send-communication #communication-topic

management:
  endpoints:
    web:
      exposure:
        include: "*"
  info:
    env:
      enabled: true
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
    shutdown:
      access: unrestricted
  metrics:
    tags:
      application: ${spring.application.name}

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: accounts
    description: Accounts Microservice
    version: 1.0.0
    build: 1.0.0
    environment: default

logging:
  level:
    com:
      eazybytes:
        accounts: DEBUG
#  pattern:
#    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 500
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      # Exceptions that should not trigger a retry attempt
      ignoreExceptions:
        - java.lang.NullPointerException
      # Exceptions that should trigger a retry attempt
      retryExceptions:
        - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 500
      limitForPeriod: 1