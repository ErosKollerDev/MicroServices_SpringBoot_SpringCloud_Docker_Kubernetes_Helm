apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbit
  labels:
    app: rabbit
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbit
  template:
    metadata:
      labels:
        app: rabbit
    spec:
      containers:
        - name: rabbit
          image: rabbitmq:management
          ports:
            - name: amqp
              containerPort: 5672
            - name: management
              containerPort: 15672
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: "guest"
            - name: RABBITMQ_DEFAULT_PASS
              value: "guest"
          readinessProbe:
            exec:
              command: ["rabbitmq-diagnostics", "check_port_connectivity"]
            # mirrors interval/timeout/retries/start_period from compose
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10
          livenessProbe:
            exec:
              command: ["rabbitmq-diagnostics", "check_port_connectivity"]
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10
          # restart is handled by Deployment; no need for a restart policy like in compose
---
apiVersion: v1
kind: Service
metadata:
  name: rabbit
  labels:
    app: rabbit
spec:
  selector:
    app: rabbit
  type: LoadBalancer
  ports:
    - name: amqp
      port: 5672
      targetPort: 5672
    - name: management
      port: 15672
      targetPort: 15672